/*! bfollow 2015-07-16 */
!function(){"use strict";angular.module("app",["ngRoute","ngCookies"]).config(["$routeProvider","$locationProvider",function(a,b){a.when("/",{controller:"HomeController",templateUrl:"/views/home.html",controllerAs:"vm"}).when("/login",{controller:"LoginController",templateUrl:"/views/login.html",controllerAs:"vm"}).when("/register",{controller:"RegisterController",templateUrl:"/views/register.html",controllerAs:"vm"}).otherwise({redirectTo:"/login"})}]).run(["$rootScope","$location","$cookieStore","$http",function(a,b,c,d){a.globals=c.get("globals")||{},a.globals.currentUser&&(d.defaults.headers.common.Authorization="Basic "+a.globals.currentUser.authdata),a.$on("$locationChangeStart",function(c,d,e){var f,g,h,i=b.path();for(f=0;f<i.length;f+=1)if(g=i[f],"/login"!==g&&"/register"!==g){h=!0;break}var j=a.globals.currentUser;h&&!j&&b.path("/login")})}])}(),function(){"use strict";function a(a,b){function c(){d(),e()}function d(){a.GetByUsername(b.globals.currentUser.username).then(function(a){g.user=a})}function e(){a.GetAll().then(function(a){g.allUsers=a})}function f(b){a.Delete(b).then(function(){e()})}var g=this;g.user=null,g.allUsers=[],g.deleteUser=f,c()}angular.module("app").controller("HomeController",a),a.$inject=["UserService","$rootScope"]}(),function(){"use strict";angular.module("app").controller("LoginController",["$location","ConnectService",function(a,b){}])}(),function(){"use strict";function a(a,b,c,d){function e(){f.dataLoading=!0,a.Create(f.user).then(function(a){a.success?(d.Success("Registration successful",!0),b.path("/login")):(d.Error(a.message),f.dataLoading=!1)})}var f=this;f.register=e}angular.module("app").controller("RegisterController",a),a.$inject=["UserService","$location","$rootScope","FlashService"]}(),function(){"use strict";function a(a,b,c,d,e){var f={};return f}angular.module("app").factory("ConnectService",a),a.$inject=["$http","$cookieStore","$rootScope","$timeout","UserService"]}(),function(){"use strict";function a(a){function b(){return a.get("/api/users").then(h,i("Error getting all users"))}function c(b){return a.get("/api/users/"+b).then(h,i("Error getting user by id"))}function d(b){return a.get("/api/users/"+b).then(h,i("Error getting user by username"))}function e(b){return a.post("/api/users",b).then(h,i("Error creating user"))}function f(b){return a.put("/api/users/"+b.id,b).then(h,i("Error updating user"))}function g(b){return a["delete"]("/api/users/"+b).then(h,i("Error deleting user"))}function h(a){return a}function i(a){return function(){return{success:!1,message:a}}}var j={};return j.GetAll=b,j.GetById=c,j.GetByUsername=d,j.Create=e,j.Update=f,j.Delete=g,j}angular.module("app").factory("UserService",a),a.$inject=["$http"]}();